#!/bin/sh

help() {
    echo ""
    echo "Usage: ${0##*/} [-h] [-d DIR] [-t NUM] -w WRF1 WRF2 ... -n X Y Z ... -c CASE1 CASE2 ..."
    echo "Creates and submits a series of PBS jobs scripts for all combinations of parameters"
    echo ""
    echo "OPTIONS:"
    echo "    -w, --wrfs  WRF_DIR LIST     Directories of compiled WRF versions to use."
    echo "    -n, --nodes NUM_NODES LIST   Number of nodes to use."
    echo "    -c, --cases CASE_DIR LIST    Directories with cases to run, each containing a namelist.input, wrfbdy, and wrfinput or wrfrst."
    echo "    -t, --trial NUM              A trial number to avoid overwriting a previous run with the same parameters. [default 1]"
    echo "    -r, --rundir RUN_DIR         Directory to which to place run output. [default ~/work/run]"
    echo "    -a, --walltime 'HH:MM:SS'    Walltime for all submitted jobs. [default 00:30:00]"
    echo "    -e, --envvars ENV_VAR LIST   Environment variables to be set."
    echo "    -h, --help                   This help"
    echo ""
    exit 0
}

reading_list=none
TRIAL_NUM=1
RUN_DIR=~/work/run
WALL_TIME='00:30:00'

while test $# -gt 0
do
    case $1 in
        -w|--wrfs)
            reading_list=wrfs ;;
        -n|--nodes)
            reading_list=nodes ;;
        -c|--cases)
            reading_list=cases ;;
        -e|--envvars)
            reading_list=envvars ;;
        -t|--trial)
            reading_list=none
            TRIAL_NUM=$2
            shift ;;
        -r|--rundir)
            reading_list=none
            RUN_DIR=$2
            shift ;;
        -a|--walltime)
            reading_list=none
            WALL_TIME=$2
            shift ;;
        -h|--help)
            help ;;
	      *)
            if   [ "$reading_list" = wrfs    ] ; then WRFs+=("$1")
            elif [ "$reading_list" = nodes   ] ; then NODES+=($1)
            elif [ "$reading_list" = cases   ] ; then CASES+=("$1")
            elif [ "$reading_list" = envvars ] ; then ENVVARS+=("$1")
            else
                help
            fi
	          ;;
    esac
	  shift
done

if [ ${#ENVVARS[@]} -eq 0 ]; then
   ENV_STR=$(printf "export %s\n" "${ENVVARS[@]}")
fi

PWD=$(pwd)

for CASE_DIR in "${CASES[@]}"
do
    for WRF_DIR in "${WRFs[@]}"
    do
        for N in "${NODES[@]}"
        do
            cd $PWD
            WRF_PATH=$(readlink -f $WRF_DIR)
            if [ -z $WRF_PATH ] || [ ! -d $WRF_PATH ]; then
                echo "Invalid WRF_PATH: $WRF_DIR"
                exit 1
            fi
            CASE_PATH=$(readlink -f $CASE_DIR)
            if [ -z $CASE_PATH ] || [ ! -d $WRF_PATH ]; then
                echo "Invalid CASE_PATH: $CASE_PATH"
                exit 1
            fi

            JOB_NAME=$(basename $CASE_DIR)-$(basename $WRF_DIR)-T$TRIAL_NUM-N$(printf "%03d" $N)
            mkdir -p $RUN_DIR/$JOB_NAME
            cd $RUN_DIR/$JOB_NAME

            ln -sf $WRF_PATH/run/* .
            ln -sf $CASE_PATH/* .  # must be second to overwrite default namelist.input

            envsubst '${JOB_NAME},${N},${WALL_TIME},${ENV_STR}' > $JOB_NAME.pbs << EOF
#!/bin/bash
#PBS -N ${JOB_NAME}
#PBS -A SCSG0002
#PBS -l walltime=${WALL_TIME}
#PBS -q regular
#PBS -j oe
#PBS -l select=${N}:ncpus=36:mpiprocs=36
#PBS -m abe
#PBS -M akirak@ucar.edu

export TMPDIR=/glade/scratch/$USER/temp
mkdir -p $TMPDIR
${ENV_STR}

./mpirun_wrf $((${N} * 36))
EOF
            qsub $JOB_NAME.pbs
        done
    done
done
